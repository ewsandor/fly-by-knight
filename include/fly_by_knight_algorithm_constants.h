/*
 fly_by_knight_algorithm_constants.h
 Fly by Knight - Chess Engine
 Edward Sandor
 January 2021
 
 Algorithm constants for Fly by Knight
*/

#ifndef _FLY_BY_KNIGHT_ALGORITHM_CONSTANTS_H_
#define _FLY_BY_KNIGHT_ALGORITHM_CONSTANTS_H_

/* Weighting for piece types */
#define FBK_SCORE_PAWN      1000
#define FBK_SCORE_KNIGHT    3000
#define FBK_SCORE_BISHOP    3000
#define FBK_SCORE_ROOK      5000
#define FBK_SCORE_QUEEN     9000
#define FBK_SCORE_KING   1000000

/* Max score for each color */
#define FBK_SCORE_WHITE_MAX  ( 64 * FBK_SCORE_KING)
#define FBK_SCORE_BLACK_MAX  (-64 * FBK_SCORE_KING)

/* Weight per legal move for piece */
#define FBK_SCORE_PAWN_MOVE    1
#define FBK_SCORE_KNIGHT_MOVE  3
#define FBK_SCORE_BISHOP_MOVE  4
#define FBK_SCORE_ROOK_MOVE    4
#define FBK_SCORE_QUEEN_MOVE   4
#define FBK_SCORE_KING_MOVE   10

/* Weight potential capture */
#define FBK_SCORE_CAPTURE_PAWN   ((1*FBK_SCORE_PAWN)   /16)
#define FBK_SCORE_CAPTURE_KNIGHT ((1*FBK_SCORE_KNIGHT) /16)
#define FBK_SCORE_CAPTURE_BISHOP ((1*FBK_SCORE_BISHOP) /16)
#define FBK_SCORE_CAPTURE_ROOK   ((1*FBK_SCORE_ROOK)   /16)
#define FBK_SCORE_CAPTURE_QUEEN  ((1*FBK_SCORE_QUEEN)  /16)
#define FBK_SCORE_CAPTURE_KING   ((1*FBK_SCORE_PAWN)   /3)

/* Weight potential loss */
#define FBK_SCORE_LOSS_PAWN   ((1*FBK_SCORE_PAWN)   /16)
#define FBK_SCORE_LOSS_KNIGHT ((1*FBK_SCORE_KNIGHT) /16)
#define FBK_SCORE_LOSS_BISHOP ((1*FBK_SCORE_BISHOP) /16)
#define FBK_SCORE_LOSS_ROOK   ((1*FBK_SCORE_ROOK)   /16)
#define FBK_SCORE_LOSS_QUEEN  ((1*FBK_SCORE_QUEEN)  /16)
#define FBK_SCORE_LOSS_KING   ((1*FBK_SCORE_PAWN)   /2 )


/* Score for the ability to castle */
#define FBK_SCORE_CAN_CASTLE        (FBK_SCORE_PAWN/10)
#define FBK_SCORE_CASTLED_KINGSIDE  ((2*FBK_SCORE_PAWN)/5)
#define FBK_SCORE_CASTLED_QUEENSIDE (FBK_SCORE_PAWN/5)

/* Score scalar for TWOFOLD repetitions as this is approaching THREEFOLD repetition draw */
#define FBK_TWOFOLD_REPETITION_NUM (1)
#define FBK_TWOFOLD_REPETITION_DEN (2)

/* Doubled pawn base penalty (base*2^(doubled_pawn_count-2))*/
#define FBK_SCORE_DOUBLE_PAWN_BASE_PENALTY (FBK_SCORE_PAWN/50)

#define FBK_SCORE_PAWN_CENTER_SQUARE ((10*FBK_SCORE_PAWN) / 50)

#define FBK_SCORE_PAWN_SEVENTH_ROW   (( 5*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_PAWN_SIXTH_ROW     (( 4*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_PAWN_FIFTH_ROW     (( 3*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_PAWN_FOURTH_ROW    (( 2*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_PAWN_THIRD_ROW     (( 1*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_PAWN_SECOND_ROW    (( 0*FBK_SCORE_PAWN) / 50)

#define FBK_SCORE_KNIGHT_EIGHTH_ROW  (( 0*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_SEVENTH_ROW (( 3*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_SIXTH_ROW   ((10*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FIFTH_ROW   (( 7*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FOURTH_ROW  (( 5*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_THIRD_ROW   (( 3*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_SECOND_ROW  (( 0*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FIRST_ROW   (( 0*FBK_SCORE_PAWN) / 50)

#define FBK_SCORE_KNIGHT_FILE_A      (( 0*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FILE_B      (( 1*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FILE_C      (( 3*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FILE_D      (( 5*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FILE_E      (( 5*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FILE_F      (( 3*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FILE_G      (( 1*FBK_SCORE_PAWN) / 50)
#define FBK_SCORE_KNIGHT_FILE_H      (( 0*FBK_SCORE_PAWN) / 50)

#endif //_FLY_BY_KNIGHT_ALGORITHM_CONSTANTS_H_